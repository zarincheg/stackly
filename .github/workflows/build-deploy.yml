name: Build and deploy the app

# on: workflow_dispatch
on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      
      - name: 'Create env file'
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  server-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout into main
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/prod.key
          chmod 600 ~/.ssh/prod.key
          cat >>~/.ssh/config <<END
          Host prod
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/prod.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ vars.HOST_PROD_USER }}
          SSH_KEY: ${{ secrets.DEPLOY_SSH_SECRET_KEY }}
          SSH_HOST: ${{ vars.HOST_PROD_IP }}

      - name: Upload docker compose file to the server
        run: scp ./service.yml prod:${{ vars.HOST_PROD_SERVICE_PATH }}/${{ vars.DOMAIN }}.yml

      - name: Create temporary file with env variable for Docker Compose
        run: echo -e "
          DOMAIN=${{ vars.DOMAIN }}\n
          APP_PORT=${{ vars.APP_PORT }}\n
          IMAGE_NAME=${{ env.IMAGE_NAME }}\n
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}\n
          ALIAS=${{ vars.ALIAS }}
          " > service.env

      - name: Upload env file to the server
        run: scp ./service.env prod:${{ vars.HOST_PROD_SERVICE_PATH }}/${{ vars.DOMAIN }}.env

      - name: Run the app container
        run: ssh prod docker compose --env-file ${{ vars.HOST_PROD_SERVICE_PATH }}/${{ vars.DOMAIN }}.env -f ${{ vars.HOST_PROD_SERVICE_PATH }}/${{ vars.DOMAIN }}.yml up -d
